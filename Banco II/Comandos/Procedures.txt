//FUNCTION VALIDA CPF

create or replace function fc_valida_cnpj
(
    in cpnj character varying, 
    in isnotnull boolean default false
)
returns boolean as
$$
declare
    
    invalidcnpj character varying[10] 
    default array['00000000000000', '11111111111111',
                  '22222222222222', '33333333333333',
                  '44444444444444', '55555555555555',
                  '66666666666666', '77777777777777',
                  '88888888888888', '99999999999999'];
                  
    cnpjquebrado smallint[];
    
    digitovf1 constant smallint default 13;
    arranjovf1 smallint[12] default array[5,4,3,2,9,8,7,6,5,4,3,2];
    somadvf1 smallint default 0;
    restodfv1 double precision default 0;
    
    digitovf2 constant smallint default 14;
    arranjovf2 smallint[13] default array[6,5,4,3,2,9,8,7,6,5,4,3,2];
    somadvf2 smallint default 0;
    restodfv2 double precision default 0;
    
begin
    
    if isnotnull and nullif(cpnj, '') is null then
        return true;
    end if;
    
    if (not (cpnj ~* '^([0-9]{14})$' or 
             cpnj ~* '^([0-9]{2}\.[0-9]{3}\.[0-9]{3}\/[0-9]{4}\-[0-9]{2})$')) or
        cpnj = any (invalidcnpj) or
        cpnj is null
    then
        return false;    
    end if;
    
    cnpjquebrado := regexp_split_to_array(
      regexp_replace(cpnj, '[^0-9]', '', 'g'), '');
        
    -- Realiza o calculo do primeiro digito
    for t in 1..12 loop
        somadvf1 := somadvf1 + 
      (cnpjquebrado[t] * arranjovf1[t]);
    end loop;
    restodfv1 := ((10 * somadvf1) % 11) % 10;
       
    if (restodfv1 != cnpjquebrado[13]) 
    then
        return false;
    end if;
    
    -- Realiza o calculo do segundo digito    
    for t in 1..13 loop
        somadvf2 := somadvf2 + 
      (cnpjquebrado[t] * arranjovf2[t]);
    end loop;
    restodfv2 := ((10 * somadvf2) % 11) % 10;
    
    return (restodfv2 = cnpjquebrado[digitovf2]);    
    
end;
$$ language plpgsql;





///IDADE VALIDA

CREATE OR REPLACE PROCEDURE public.validarIdade(num integer)
 LANGUAGE plpgsql
AS $procedure$

begin
  if (num <= 130) then

	raise notice 'Idade valida';

	end if;

END LOOP; 
end
$procedure$
;